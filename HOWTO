First read the README file

Configuration tasks:

-Deploy CentOS images, at lease 3 (1 as Frontend, 1 as appserver, 1 as db)

-on every server add those 3 lines in /etc/hosts changing IP address as your configuration:

x.y.w.z webserver1
x.y.w.z appserver1
x.y.w.z db1

-verify servers can ping each other with provided names

Execution task: ##note: scripts work only with host names specified above. Change scripts if you want to use different names or IP address instead.

On webserver1 system, copy the file webserver.sh locally on ./root/ 
After the copy make it executable for root:

:~ root# chmod 700 webserver1.sh

On appserver1 system, copy the file appserver.sh locally on ./root/ 
After the copy make it executable for root:

:~ root# chmod 700 appserver1.sh

On db1 system, copy the file db1.sh locally on ./root/ 
After the copy make it executable for root:

:~ root# chmod 700 db1.sh


Launch the scripts in this sequence otherwise processes will exit due to no listener reached:

1. on DB1 login as root and execute the command:
:~ root# ./db1.sh

2. on appserver1:
:~ root# appserver1.sh

3. on webserver1:
:~ root# webserver1.sh

setup completed: socat listeners are running and nc processes are sending data. All processes are attached to specific screen sessions managed by tmux
If you want to connect to a socat or nc session use the command "tmux attach -t sessionname" 

example:
if you want to check data traffic from webserver to appserver, login as root on appserver1 and type:

:~ root# tmux list-sessions

Identify the session you want to connect to (listener to see received data) and execute:

:~ root# tmux attach -t listener

If you want to detach the screen and leave processes running, digit CTRL+b d

If you want to restart the socat listener or nc, re-run the script, but remember the sequence (Db1>appserver1>webserver1)






